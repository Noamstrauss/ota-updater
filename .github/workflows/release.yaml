name: Create Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-release:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            platform: linux
          - os: macos-latest
            platform: darwin
          - os: windows-latest
            platform: windows

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Extract version from tag
        id: get_version
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Update VERSION in Makefile
        shell: bash
        run: sed -i.bak "s/VERSION := .*/VERSION := ${{ env.VERSION }}/" Makefile

      - name: Build release
        run: make release

      - name: Upload release binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-${{ runner.arch }}-release
          path: releases/${{ matrix.platform }}/${{ runner.arch }}/${{ env.VERSION }}.bin

      - name: Create GitHub Release
        if: matrix.os == 'ubuntu-latest'
        uses: softprops/action-gh-release@v1
        with:
          name: Release v${{ env.VERSION }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: releases/${{ matrix.platform }}/${{ runner.arch }}/${{ env.VERSION }}.bin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}